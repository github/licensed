name: Test

on: pull_request

jobs:
  bower:
    runs-on: ubuntu-latest
    needs: core
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 8
    - name: Install Bower
      run: npm install -g bower
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Set up fixtures
      run: script/source-setup/bower
    - name: Run tests
      run: script/test bower

  bundler:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        bundler: [ '~> 1.17.0', '~> 2.0.0', '~> 2.1.0', '~> 2.2.0', '~> 2.3.0' ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - name: Set up Bundler
      run: |
        yes | gem uninstall bundler --all
        gem install bundler -v "${{ matrix.bundler }}"
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Set up fixtures
      run: script/source-setup/bundler
    - name: Run tests
      run: script/test bundler

  cabal:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        ghc: [ '8.6', '8.8', '8.10', '9.0' ]
        cabal: [ '3.0', '3.2', '3.4' ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - name: Setup Haskell
      uses: haskell/actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
    - run: bundle lock
    - name: cache cabal dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
        key: ${{ runner.os }}-cabal-${{ matrix.ghc }}-${{ hashFiles('**/app.cabal') }}
        restore-keys: |
          ${{ runner.os }}-cabal-
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Set up fixtures
      run: script/source-setup/cabal
    - name: Run tests
      run: script/test cabal

  cargo:
    runs-on: ubuntu-latest
    needs: core
    steps:
    - uses: actions/checkout@v3
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - run: bundle lock
    - name: cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Set up fixtures
      run: script/source-setup/cargo
    - name: Run tests
      run: script/test cargo

  composer:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        php: [ '7.4', '8.0' ]
    steps:
    - uses: actions/checkout@v3
    - name: Setup php
      uses: nanasess/setup-php@v3.2.0
      with:
        php-version: ${{ matrix.php }}
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Set up fixtures
      run: script/source-setup/composer
    - name: Run tests
      run: script/test composer

  core:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: [ 2.6, 2.7, 3.0 ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{matrix.ruby}}
    - name: Set up Bundler
      run: gem install bundler
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-${{ matrix.ruby }}-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-${{ matrix.ruby }}-
    - name: Bootstrap
      run: script/bootstrap
    - name: Build and lint
      run: bundle exec rake rubocop build
    - name: Core functionality tests
      run: script/test core

  dep:
    runs-on: ubuntu-latest
    needs: core
    steps:
    - uses: actions/checkout@v3
    - name: Setup go
      uses: actions/setup-go@v3
      with:
        go-version: 1.10.x
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Set up fixtures
      run: script/source-setup/go
    - name: Run tests
      run: script/test dep

  go:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        go: [ '1.12.x', '1.13.x', '1.14.x', '1.15.x', '1.16.x' ]
    steps:
    - uses: actions/checkout@v3
    - name: Setup go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go }}
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache go dependencies
      with:
        path: |
         ~/.cache/go-build
         ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Set up fixtures
      run: script/source-setup/go
    - name: Run tests
      run: script/test go
      env:
        GO111MODULE: "on"

  gradle:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        # TODO: the reporting plugin used to gather data is not yet fully compatible with
        # gradle 7, which is needed for compatibility with Java 16.  after compatibility issues
        # are resolved, update this matrix list with '16'.
        # possibly fixed by https://github.com/jk1/Gradle-License-Report/pull/166
        java: [ '11' ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java }}
        distribution: adopt
    - uses: actions/cache@v3
      name: cache gradle dependencies
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Gradle version
      run: test/fixtures/gradle/gradlew --quiet --version
    - name: Run tests
      run: script/test gradle

  manifest:
    runs-on: ubuntu-latest
    needs: core
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Run tests
      run: script/test manifest

  mix:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        otp: [22.x, 23.x, 24.x]
        elixir: [ 1.11.x, 1.12.x ]
    steps:
    - uses: actions/checkout@v3
    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.otp}}
        elixir-version: ${{matrix.elixir}}
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Set up fixtures
      run: script/source-setup/mix
    - name: Run tests
      run: script/test mix

  npm:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        node_version: [ 12, 14, 16 ]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node_version }}
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Set up fixtures
      run: script/source-setup/npm
    - name: Run tests
      run: script/test npm

  nuget:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        dotnet: [ '3.1.x', '5.x' ]
    steps:
    - uses: actions/checkout@v3
    - name: Setup dotnet
      uses: actions/setup-dotnet@v3.0.2
      with:
        dotnet-version: ${{ matrix.dotnet }}
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Set up fixtures
      run: script/source-setup/nuget
    - name: Run tests
      run: script/test nuget

  pip:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        python: [ '3.7', '3.8', '3.9', '3.10' ]
    steps:
    - uses: actions/checkout@v3
    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
        architecture: x64
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache pip dependencies
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Install virtualenv
      run: pip install virtualenv
    - name: Set up fixtures
      run: script/source-setup/pip
    - name: Run tests
      run: script/test pip

  pipenv:
    runs-on: ubuntu-latest
    needs: core
    steps:
    - uses: actions/checkout@v3
    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        architecture: x64
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Install pipenv
      run: pip install pipenv
    - name: Set up fixtures
      run: script/source-setup/pipenv
    - name: Run tests
      run: script/test pipenv

  swift:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        swift: [ "5.4", "5.3" ]
    steps:
    - uses: actions/checkout@v3
    - name: Setup Swift
      uses: fwal/setup-swift@v1
      with:
        swift-version: ${{ matrix.swift }}
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache spm dependencies
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Set up fixtures
      run: script/source-setup/swift
    - name: Run tests
      run: script/test swift

  yarn-v1:
    runs-on: ubuntu-latest
    needs: core
    strategy:
      matrix:
        # not using 1.0.0 because it doesn't support `yarn list --production`
        yarn_version: [ 1.4.0, latest ]
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 12
    - name: Install Yarn
      run: npm install -g yarn@${YARN_VERSION}
      env:
        YARN_VERSION: ${{ matrix.yarn_version }}
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Set up fixtures
      run: script/source-setup/yarn/v1
    - name: Run tests
      run: script/test yarn/v1

  yarn-berry:
    runs-on: ubuntu-latest
    needs: core
    steps:
    - uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 12
    - name: Install Yarn
      run: npm install -g yarn
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - run: bundle lock
    - uses: actions/cache@v3
      name: cache gem dependencies
      with:
        path: vendor/gems
        key: ${{ runner.os }}-gem-2.6-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-2.6-
    - name: Bootstrap
      run: script/bootstrap
    - name: Set up fixtures
      run: script/source-setup/yarn/berry
    - name: Run tests
      run: script/test yarn/berry
